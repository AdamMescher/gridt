type Query {
  genderMany(
    """Filter by fields"""
    filter: FilterFindManyGenderInput
    skip: Int
    limit: Int = 100
    sort: SortFindManyGenderInput
  ): [Gender!]!
}

type Gender {
  id: Float!
  name: String!
  abbreviation: String!
  _id: MongoID!
}

"""
The `ID` scalar type represents a unique MongoDB identifier in collection. MongoDB by default use 12-byte ObjectId value (https://docs.mongodb.com/manual/reference/bson-types/#objectid). But MongoDB also may accepts string or integer as correct values for _id field.
"""
scalar MongoID

""""""
input FilterFindManyGenderInput {
  id: Float
  name: String
  abbreviation: String
  _id: MongoID

  """List of *indexed* fields that can be filtered via operators."""
  _operators: FilterFindManyGenderOperatorsInput
  OR: [FilterFindManyGenderInput!]
  AND: [FilterFindManyGenderInput!]
}

"""For performance reason this type contains only *indexed* fields."""
input FilterFindManyGenderOperatorsInput {
  id: FilterFindManyGenderIdOperatorsInput
  _id: FilterFindManyGender_idOperatorsInput
}

input FilterFindManyGenderIdOperatorsInput {
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  ne: Float
  in: [Float]
  nin: [Float]
  exists: Boolean
}

input FilterFindManyGender_idOperatorsInput {
  gt: MongoID
  gte: MongoID
  lt: MongoID
  lte: MongoID
  ne: MongoID
  in: [MongoID]
  nin: [MongoID]
  exists: Boolean
}

enum SortFindManyGenderInput {
  _ID_ASC
  _ID_DESC
  ID_ASC
  ID_DESC
}

type Mutation {
  """
  Create one document with mongoose defaults, setters, hooks and validation
  """
  genderCreateOne(record: CreateOneGenderInput!): CreateOneGenderPayload
}

type CreateOneGenderPayload {
  """Document ID"""
  recordId: MongoID

  """Created document"""
  record: Gender

  """
  Error that may occur during operation. If you request this field in GraphQL query, you will receive typed error in payload; otherwise error will be provided in root `errors` field of GraphQL response.
  """
  error: ErrorInterface
}

interface ErrorInterface {
  """Generic error message"""
  message: String
}

""""""
input CreateOneGenderInput {
  name: String!
  abbreviation: String!
}
