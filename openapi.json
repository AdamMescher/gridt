{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "GRIDT API Documentation",
    "description": "this is a description of the API that will be written at some point"
  },
  "servers": [{ "url": "http://localhost:3333/api/v1" }],
  "tags": [
    {
      "name": "gender",
      "description": "All possible operations for Gender documents"
    },
    {
      "name": "race",
      "description": "All operations for Race documents"
    },
    {
      "name": "disability",
      "description": "All operations for Disability documents"
    },
    {
      "name": "state",
      "description": "All operations for State documents"
    },
    {
      "name": "district",
      "description": "All operations for District documents"
    },
    {
      "name": "school",
      "description": "All operations for School documents"
    }
  ],
  "paths": {
    "/genders": {
      "get": {
        "tags": ["gender"],
        "summary": "Find all Genders",
        "description": "Returns all Gender documents in genders collection of GRIDT",
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "this is a 400 error" },
          "500": { "description": "this is a 500 error" }
        }
      },
      "post": {
        "tags": ["gender"],
        "summary": "Add one new Gender",
        "description": "Add one Gender document in genders collection of GRIDT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Gender"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "successful submission" },
          "409": {
            "description": "id, name, and abbreviation properties must be unique"
          },
          "422": {
            "description": "id, name, and abbreviation properties are required"
          }
        }
      },
      "delete": {
        "tags": ["gender"],
        "summary": "Delete all Genders",
        "description": "Delete all Gender documents in the genders collection of GRIDT",
        "responses": {
          "202": { "description": "Successfuly delete" }
        }
      }
    },
    "/genders/{id}": {
      "get": {
        "tags": ["gender"],
        "summary": "Find one Gender by ID",
        "description": "Returns one Gender document by ID in genders collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      },
      "put": {
        "tags": ["gender"],
        "summary": "Update one Gender by ID",
        "description": "Updates one Gender document by ID in genders collection of GRIDT",
        "responses": {
          "200": { "description": "ok" },
          "400": { "description": "user error" },
          "500": { "description": "server error" }
        }
      },
      "delete": {
        "tags": ["gender"],
        "summary": "Delete one Gender by ID",
        "description": "Deletes one Gender document by ID in genders collection of GRIDT",
        "responses": {
          "200": { "description": "OK" }
        }
      }
    },
    "/races": {
      "get": {
        "tags": ["race"],
        "summary": "Find all Races",
        "description": "Returns all Race documents by ID in races collection of GRIDT",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/races/{id}": {
      "get": {
        "tags": ["race"],
        "summary": "Find one Race by ID",
        "description": "Find one Race document by ID in races collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      }
    },
    "/disabilities": {
      "get": {
        "tags": ["disability"],
        "summary": "Find all Disabilities",
        "description": "Find all Disability documents in disabilities collection of GRIDT",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/disabilities/{id}": {
      "get": {
        "tags": ["disability"],
        "summary": "Returns one Disability by ID",
        "description": "Find one Disability document by ID in disabilities collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      }
    },
    "/states": {
      "get": {
        "tags": ["state"],
        "summary": "Find all States",
        "description": "Find all State documents in states collection of GRIDT",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/states/{id}": {
      "get": {
        "tags": ["state"],
        "summary": "Find one State by ID",
        "description": "Returns one State document by ID in states collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      }
    },
    "/districts": {
      "get": {
        "tags": ["district"],
        "summary": "Find all Districts",
        "description": "Returns all District documents in districts collection of GRIDT",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/districts/{id}": {
      "get": {
        "tags": ["district"],
        "summary": "Find one District by ID",
        "description": "Returns one District document by ID in disctricts collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      }
    },
    "/schools": {
      "get": {
        "tags": ["school"],
        "summary": "Find all Schools",
        "description": "Returns all School documents in schools collection of GRIDT",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/schools/{id}": {
      "get": {
        "tags": ["school"],
        "summary": "Find one School by ID",
        "description": "Returns one School document by ID in schools collection of GRIDT",
        "responses": { "200": { "description": "OK" } },
        "parameters": [{ "in": "path", "name": "id" }]
      }
    }
  },
  "components": {
    "schemas": {
      "Gender": {
        "title": "Gender",
        "type": "object",
        "properties": {
          "id": { "type": "number", "description": "unique gender ID" },
          "name": { "type": "string", "description": "unique gender name" },
          "abbreviation": {
            "type": "string",
            "description": "unique gender abbreviation, should be 3 of fewer lowercase chars"
          }
        },
        "required": ["id", "name", "abbreviation"]
      }
    }
  }
}
